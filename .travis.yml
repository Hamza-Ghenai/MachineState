matrix:
  include:
    # - name: "Ubuntu Xenial AMD64 Python 3.4"
    #   os: linux
    #   dist: xenial
    #   arch: amd64
    #   python: 3.4
    #   language: python
    # - name: "Ubuntu Xenial AMD64 Python 3.5"
    #   os: linux
    #   dist: xenial
    #   arch: amd64
    #   python: 3.5
    #   language: python
    # - name: "Ubuntu Xenial AMD64 Python 3.6"
    #   os: linux
    #   dist: xenial
    #   arch: amd64
    #   python: 3.6
    #   language: python
    # - name: "Ubuntu Xenial AMD64 Python 3.7"
    #   os: linux
    #   dist: xenial
    #   arch: amd64
    #   python: 3.7
    #   language: python
    # - name: "Ubuntu Xenial AMD64 Python 3.8"
    #   os: linux
    #   dist: xenial
    #   arch: amd64
    #   python: 3.8
    #   language: python
    # - name: "Ubuntu Xenial PPC64 Python 3.4"
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   python: 3.4
    #   language: python
    # - name: "Ubuntu Xenial PPC64 Python 3.5"
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   python: 3.5
    #   language: python
    # - name: "Ubuntu Xenial PPC64 Python 3.6"
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   python: 3.6
    #   language: python
    # - name: "Ubuntu Xenial PPC64 Python 3.7"
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   python: 3.7
    #   language: python
    # - name: "Ubuntu Xenial PPC64 Python 3.8"
    #   os: linux
    #   dist: xenial
    #   arch: ppc64le
    #   python: 3.8
    #   language: python
    # - name: "Ubuntu Xenial ARM8 Python 3.4"
    #   os: linux
    #   dist: xenial
    #   arch: arm64
    #   python: 3.4
    #   language: python
    # - name: "Ubuntu Xenial ARM8 Python 3.5"
    #   os: linux
    #   dist: xenial
    #   arch: arm64
    #   python: 3.5
    #   language: python
    # - name: "Ubuntu Xenial ARM8 Python 3.6"
    #   os: linux
    #   dist: xenial
    #   arch: arm64
    #   python: 3.6
    #   language: python
    # - name: "Ubuntu Xenial ARM8 Python 3.7"
    #   os: linux
    #   dist: xenial
    #   arch: arm64
    #   python: 3.7
    #   language: python
    # - name: "Ubuntu Xenial ARM8 Python 3.8"
    #   os: linux
    #   dist: xenial
    #   arch: arm64
    #   python: 3.8
    #   language: python
    - name: "MacOS 10.15.5 AMD64 Python 3.8"
      os: osx
      osx_image: xcode12
      arch: amd64
      language: shell
      cache:
        - directories:
          - $HOME/Library/Caches/pip
    - name: "MacOS 10.15.5 AMD64 Python 3.7"
      os: osx
      osx_image: xcode12
      arch: amd64
      language: shell
      env: OSX_PY_VERSION="3.7"
      cache:
        - directories:
          - $HOME/Library/Caches/pip
    # - name: "MacOS 10.14.6 AMD64 Python 3.7"
    #   os: osx
    #   osx_image: xcode11.3
    #   arch: amd64
    #   language: shell
    #   cache:
    #     - directories:
    #       - $HOME/Library/Caches/pip
    # - name: "MacOS 10.13 AMD64 Python 3.7"
    #   os: osx
    #   osx_image: xcode10.1
    #   arch: amd64
    #   language: shell
    #   cache:
    #     - directories:
    #       - $HOME/Library/Caches/pip

before_install:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install slurm slurm-client openmpi-bin clang gfortran clinfo environment-modules; fi
- brew search python
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install slurm open-mpi gcc clinfo modules; export PATH="/usr/local/opt/gcc@10/bin":$PATH; export CC=gcc-10; export CXX=g++-10; export FC=gfortran; fi
- if [ "$TRAVIS_OS_NAME" == "linux" -a "$TRAVIS_CPU_ARCH" == "amd64" ]; then sudo apt-get install likwid; fi
- if [ "$TRAVIS_OS_NAME" == "osx" -a ! -z "$OSX_PY_VERSION" ]; then brew install "python@$OSX_PY_VERSION"; export PATH="/usr/local/opt/python@$OSX_PY_VERSION/bin":$PATH; fi

# Workaround for cacheing issue on travis:
- if [ "$TRAVIS_OS_NAME" == "linux" -a -e ~/.cache/pip/wheels ]; then sudo chown -Rv $USER:$GROUP ~/.cache/pip/wheels; fi
- pip3 install codecov
- pip3 install requests
- python3 --version
- python --version
- which python
- which python3
install:
- pip3 install -e .
script:
- coverage run -p tests/all_tests.py
- coverage run -p `which machinestate` -e -s -i 4
- coverage run -p `which machinestate` -e -s -i 4 -o output-ext.json
- coverage run -p `which machinestate` -s -i 4 -o output.json
- CC=testcompiler CXX=testccompiler FC=testfortran coverage run -p `which machinestate` -c
- coverage run -p `which machinestate` -e -s -a hostname
- coverage run -p `which machinestate` -j output.json
- coverage run -p `which machinestate` -e -j output.json
- coverage run -p `which machinestate` -j output-ext.json
after_success:
- coverage combine
- codecov
#- if [ "$TRAVIS_CPU_ARCH" == "amd64" ]; then likwid-features -c 0 -l; likwid-powermeter -i; ls /sys/devices/platform/coretemp*; ls /sys/devices/virtual/thermal/thermal_zone*; fi
deploy:
  provider: pypi
  username: "__token__"
  password:
    secure: "BWNC6EVfvgm8vBvWJsq2zeR3yauhL5gpJB2QwK3ua/lGM1d3mVDaIkAyttRaoT25bpitktI5jVrLmfb6dgF8taeUY9I7dnFlyppkKs3weOSLKtQxlN6ICY2Jcw0OjhzXKv/6i+NzZZOM0Y6jTptUc604Fi+wBubGvAqx0JjR72FmECVxvon9GQfgqraC0hrIXOrjIGGtw4R7/pias/wUCKXyGjojsdti63+3fdi4nZvaEF7PCxP9ZGIfWMvLfm00hT8trKobFh3cmHoiKB8sPIwKN0GjcIyYsZ7NrledDAHBfzbHCawcppuY1MLiCiJBrrQxrcZffIYOPMuFzSkYAMdKiRugRsVbGltSmPAsom2rEWoyJ5Auy0Myw5YQAHp6edVnPI0Ot8gkVcuCzzpbdtZUjvdLI59GclXIZw07ChpnX0RqOaECxvQSLft2uUpzYU3Zi5JIU3+2ne0d1Cy81qVLUCB571UVUHIzfhgRVKhxAconEEwezlZRjQVChPyuBt7P5w4Sr2bi/l26bKvQ+rk4XrPXhzEmgpGVIfLObcnpD5D4ROteFXRedk9ezlpAJofC05wtyDL1PybUIB5Ra4VQ6NL86MXqt3TeVxjNbWAXlT1d3wHwwqz6LxtB7WmzqWTuA0TWpjmlGeVkRUCR83MbYngXRYhpa3EbwXdQFKc="
  distributions: sdist
  skip_existing: true
  cleanup: false
  on:
    repo: RRZE-HPC/MachineState
    branch: master
    tags: true
